// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/sygmaprotocol/sygma-core/store (interfaces: KeyValueReaderWriter)
//
// Generated by this command:
//
//	mockgen -destination=./mock/store.go -package mock github.com/sygmaprotocol/sygma-core/store KeyValueReaderWriter
//
// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockKeyValueReaderWriter is a mock of KeyValueReaderWriter interface.
type MockKeyValueReaderWriter struct {
	ctrl     *gomock.Controller
	recorder *MockKeyValueReaderWriterMockRecorder
}

// MockKeyValueReaderWriterMockRecorder is the mock recorder for MockKeyValueReaderWriter.
type MockKeyValueReaderWriterMockRecorder struct {
	mock *MockKeyValueReaderWriter
}

// NewMockKeyValueReaderWriter creates a new mock instance.
func NewMockKeyValueReaderWriter(ctrl *gomock.Controller) *MockKeyValueReaderWriter {
	mock := &MockKeyValueReaderWriter{ctrl: ctrl}
	mock.recorder = &MockKeyValueReaderWriterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyValueReaderWriter) EXPECT() *MockKeyValueReaderWriterMockRecorder {
	return m.recorder
}

// GetByKey mocks base method.
func (m *MockKeyValueReaderWriter) GetByKey(arg0 []byte) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByKey", arg0)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByKey indicates an expected call of GetByKey.
func (mr *MockKeyValueReaderWriterMockRecorder) GetByKey(arg0 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByKey", reflect.TypeOf((*MockKeyValueReaderWriter)(nil).GetByKey), arg0)
}

// SetByKey mocks base method.
func (m *MockKeyValueReaderWriter) SetByKey(arg0, arg1 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetByKey", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetByKey indicates an expected call of SetByKey.
func (mr *MockKeyValueReaderWriterMockRecorder) SetByKey(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetByKey", reflect.TypeOf((*MockKeyValueReaderWriter)(nil).SetByKey), arg0, arg1)
}
